import numpy as np
import random
import matplotlib.pyplot as plt
import kalman
""" This example shows a basic implematation of the Kalman Filter Class,
    its filter a one dimension measure to a one dimension state """
voltimeter = kalman.Kalman(R=np.array(170.0))    # create a kalman object
'''
x = range(100)                  # number of measurements
z=[]                            # list of measurements
voltage = 3                     # real valor of the voltage
for i in x:
    z.append( voltage + np.random.normal(0,0.5))  #add noise to the measure
    voltimeter.Step(0,z[i])                       #estimate the voltage value
'''

encoder = [0,150,150,150,850,400,150,150,100,150,200,550,500,350,350,350,450,700,600,350,350,400,1050,450,450,350,400,1100,500,350,400,600,850,400,350,450,400,650,400,400,350,400,1000,400,400,350,450,700,450,350,550,500,350,400,400,400,800,500,400,550,400,700,350,400,450,400,750,350,650,600,350,950,500,350,400,450,700,400,500,350,400,650,450,400,350,350,1000,350,400,350,400,800,1150,400,350,500,450,350,400,550,400,450,600,400,400,400,800,400,350,350,400,550,400,400,350,400,800,550,400,350,450,500,400,450,400,400,550,500,350,400,400,600,450,350,350,500,1000,400,400,350,450,600,400,400,500,550,550,400,400,400,600,850,450,350,400,400,200,400,350,400,400,900,450,400,350,600,900,400,350,500,300,800,400,350,400,450,450,400,550,350,550,350,400,350,400,500,350,350,400,450,400,400,400,350,400,450,800,350,350,400,300,550,400,350,400,450,350,400,350,400,300,600,350,400,350,550,400,200,150,200,50,300,200,150,250,400,250,200,200,300,450,200,200,200,250,400,200,150,200,250,300,200,200,150,200,300,200,200,200,600,300,200,200,200,400,300,200,150,200,500,200,200,200,150,350,200,200,200,200,500,350,200,200,200,700,300,200,150,200,200,500,200,150,250,400,250,200,200,200,600,300,200,200,200,950,800,200,150,200,600,250,200,150,250,250,200,200,200,300,650,250,150,200,250,450,200,150,200,200,400,200,200,200,400,550,200,200,200,350,500,200,150,200,500,300,200,350,150,250,150,200,200,200,400,250,200,200,200,350,250,200,150,200,150,250,200,200,200,350,350,200,200,200,450,650,150,200,200,450,300,200,150,250,350,250,200,200,200,200,250,200,200,250,100,250,150,200,250,500,200,150,200,200,350,200,200,150,250,300,200,200,350,400,500,450,400,400,550,400,450,400,400,500,300,400,350,400,600,400,400,350,400,500,400,400,400,400,400,500,400,400,400,300,550,350,350,400,350,700,500,350,400,350,450,400,350,400,250,650,350,400,400,450,550,350,350,450,350,500,350,400,500,900,400,400,400,400,800,400,450,400,500,400,400,350,350,400,550,400,350,400,1000,200,400,450,400,400,600,400,350,400,550,700,400,500,400,350,500,400,400,350,700,400,350,450,600,300,500,350,350,400,550,750,500,350,400,650,550,400,400,400,500,1050,400,350,550,500,850,350,400,450,800,400,400,350,500,500,450,350,400,400,350,400,350,400,700,650,450,350,400,350,500,400,400,350,750,400,400,350,400,650,400,400,500,400,550,700,200,200,200,450,200,200,200,200,350,300,200,150,200,450,300,200,150,200,650,500,200,200,200,350,350,150,200,200,250,750,200,150,200,250,350,200,200,200,600,250,200,200,400,500,250,150,200,200,400,200,200,150,350,200,200,200,200,150,350,200,200,200,800,350,200,150,200,300,400,200,200,200,400,600,200,200,200,500,300,150,200,200,600,500,200,150,200,550,300,200,200,200,550,400,200,200,200,400,350,150,200,200,850,400,200,150,250,750,250,200,200,200,350,250,150,200,500,250,200,150,200,200,350,200,200,200,600,300,200,200,200,650,150,200,150,200,450,450,200,200,200,250,300,200,200,200,700,500,150,200,200,300,350,200,150,200,400,300,200,200,200,350,400,400,400,400,350,600,400,350,450,450,450,350,400,600,550,750,400,350,550,200,450,300,400,400,450,400,350,350,500,250,400,400,500,850,500,400,350,400,900,250,400,400,350,350,300,400,350,400,700,550,400,400,550,350,650,400,350,450,600,500,400,400,400,450,850,400,350,400,800,800,350,400,200,300,250,200,150,250,300,350,400,500,500,650,500,350,400,550,300,400,400,300,400,650,400,350,350,250,300,200,200,200,350,250,200,150,200,450,350,200,200,200,550,200,200,200,200,600,200,250,150,200,550,450,350,400,400,300,600,400,350,450,400,550,150,200,200,350,400,200,150,250,400,350,200,200,300,300,250,150,200,450,600,300,200,150,250,550,200,200,200,600,550,200,200,200,350,300,200,150,200,500,450,200,200,200,550,200,200,200,200,800,250,200,150,200,950,200,200,200,200,400,300,150,200,200,450,650,350,400,400,350,500,400,350,650,1000,400,350,400,450,450,400,350,400,450,450,400,300,200,300,250,200,200,150,750,600,200,200,200,200,600,200,150,200,650,650,200,200,200,350,200,200,200,200,250,500,200,150,250,450,300,200,200,200,500,200,150,200,400,400,300,350,400,600,250,400,400,400,650,500,400,400,350,500,400,450,350,400,600,600,400,350,400,300,350,400,350,400,850,400,200,200,200,300]
x = range(len(encoder))
for i in x:
    voltimeter.Step(0,encoder[i])                       #estimate the voltage value
#plot the results
#plt.axis([0, 100, 0, 6])
print voltimeter.states
plt.plot(x,encoder,label = "Measurements")
plt.plot(x,voltimeter.states,label = "Kalman filtered")
plt.show()
